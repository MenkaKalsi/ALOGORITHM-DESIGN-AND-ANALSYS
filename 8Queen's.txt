#include <iostream>
using namespace std;

const int N = 4;
int Queen[N][N] = {0}; 
bool isSafe(int row, int col) {
    for (int i = 0; i < col; i++) {
        if (Queen[row][i]) {
            return false;
        }
    }
    for (int i = row, j = col; i >= 0 && j >= 0; i--, j--) {
        if (Queen[i][j]) {
            return false;
        }
    }
    for (int i = row, j = col; j >= 0 && i < N; i++, j--) {
        if (Queen[i][j]) {
            return false;
        }
        
    }
    return true;
}
bool solve(int col) {
    if (col >= N) {
        return true;
    }
    for (int i = 0; i < N; i++) {
        if (isSafe(i, col)) {
            Queen[i][col] = 1; 
            if (solve(col + 1)) {
                return true; 
            }
            Queen[i][col] = 0;
        }
    }
    return false;
}

int main() {
    if (solve(0)) {
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                cout << Queen[i][j] << " ";
            }
            cout << endl;
        }
    } else {
        cout << "No sol found." << endl;
    }
    return 0;
}